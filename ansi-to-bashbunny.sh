#!/bin/bash
# Written by supershadow899
# This is a script that was made as a response to Hak5 2506
# This script will take an input file that has ASCII/ANSI art and
# converts it to a BashBunny script

TABLE="
☺ 1 0x01
☻ 2 0x02
♥ 3 0x03
♦ 4 0x04
♣ 5 0x05
♠ 6 0x06
• 7 0x07
◘ 8 0x08
○ 9 0x09
◙ 10 0x0A
♂ 11 0x0B
♀ 12 0x0C
♪ 13 0x0D
♫ 14 0x0E
☼ 15 0x0F
► 16 0x10
◄ 17 0x11
↕ 18 0x12
‼ 19 0x13
¶ 20 0x14
§ 21 0x15
▬ 22 0x16
↨ 23 0x17
↑ 24 0x18
↓ 25 0x19
→ 26 0x1A
← 27 0x1B
∟ 28 0x1C
↔ 29 0x1D
▲ 30 0x1E
▼ 31 0x1F
  32 0x20
! 33 0x21
\" 34 0x22
\# 35 0x23
$ 36 0x24
% 37 0x25
& 38 0x26
\' 39 0x27
( 40 0x28
) 41 0x29
* 42 0x2A
+ 43 0x2B
, 44 0x2C
- 45 0x2D
. 46 0x2E
/ 47 0x2F
0 48 0x30
1 49 0x31
2 50 0x32
3 51 0x33
4 52 0x34
5 53 0x35
6 54 0x36
7 55 0x37
8 56 0x38
9 57 0x39
: 58 0x3A
; 59 0x3B
< 60 0x3C
= 61 0x3D
> 62 0x3E
? 63 0x3F
@ 64 0x40
A 65 0x41
B 66 0x42
C 67 0x43
D 68 0x44
E 69 0x45
F 70 0x46
G 71 0x47
H 72 0x48
I 73 0x49
J 74 0x4A
K 75 0x4B
L 76 0x4C
M 77 0x4D
N 78 0x4E
O 79 0x4F
P 80 0x50
Q 81 0x51
R 82 0x52
S 83 0x53
T 84 0x54
U 85 0x55
V 86 0x56
W 87 0x57
X 88 0x58
Y 89 0x59
Z 90 0x5A
[ 91 0x5B
\\ 92 0x5C
] 93 0x5D
^ 94 0x5E
_ 95 0x5F
\` 96 0x60
a 97 0x61
b 98 0x62
c 99 0x63
d 100 0x64
e 101 0x65
f 102 0x66
g 103 0x67
h 104 0x68
i 105 0x69
j 106 0x6A
k 107 0x6B
l 108 0x6C
m 109 0x6D
n 110 0x6E
o 111 0x6F
p 112 0x70
q 113 0x71
r 114 0x72
s 115 0x73
t 116 0x74
u 117 0x75
v 118 0x76
w 119 0x77
x 120 0x78
y 121 0x79
z 122 0x7A
{ 123 0x7B
| 124 0x7C
} 125 0x7D
~ 126 0x7E
⌂ 127 0x7F
Ç 128 0x80
ü 129 0x81
é 130 0x82
â 131 0x83
ä 132 0x84
à 133 0x85
å 134 0x86
ç 135 0x87
ê 136 0x88
ë 137 0x89
è 138 0x8A
ï 139 0x8B
î 140 0x8C
ì 141 0x8D
Ä 142 0x8E
Å 143 0x8F
É 144 0x90
æ 145 0x91
Æ 146 0x92
ô 147 0x93
ö 148 0x94
ò 149 0x95
û 150 0x96
ù 151 0x97
ÿ 152 0x98
Ö 153 0x99
Ü 154 0x9A
¢ 155 0x9B
£ 156 0x9C
¥ 157 0x9D
₧ 158 0x9E
ƒ 159 0x9F
á 160 0xA0
í 161 0xA1
ó 162 0xA2
ú 163 0xA3
ñ 164 0xA4
Ñ 165 0xA5
ª 166 0xA6
º 167 0xA7
¿ 168 0xA8
⌐ 169 0xA9
¬ 170 0xAA
½ 171 0xAB
¼ 172 0xAC
¡ 173 0xAD
« 174 0xAE
» 175 0xAF
░ 176 0xB0
▒ 177 0xB1
▓ 178 0xB2
│ 179 0xB3
┤ 180 0xB4
╡ 181 0xB5
╢ 182 0xB6
╖ 183 0xB7
╕ 184 0xB8
╣ 185 0xB9
║ 186 0xBA
╗ 187 0xBB
╝ 188 0xBC
╜ 189 0xBD
╛ 190 0xBE
┐ 191 0xBF
└ 192 0xC0
┴ 193 0xC1
┬ 194 0xC2
├ 195 0xC3
─ 196 0xC4
┼ 197 0xC5
╞ 198 0xC6
╟ 199 0xC7
╚ 200 0xC8
╔ 201 0xC9
╩ 202 0xCA
╦ 203 0xCB
╠ 204 0xCC
═ 205 0xCD
╬ 206 0xCE
╧ 207 0xCF
╨ 208 0xD0
╤ 209 0xD1
╥ 210 0xD2
╙ 211 0xD3
╘ 212 0xD4
╒ 213 0xD5
╓ 214 0xD6
╫ 215 0xD7
╪ 216 0xD8
┘ 217 0xD9
┌ 218 0xDA
█ 219 0xDB
▄ 220 0xDC
▌ 221 0xDD
▐ 222 0xDE
▀ 223 0xDF
α 224 0xE0
ß 225 0xE1
Γ 226 0xE2
π 227 0xE3
Σ 228 0xE4
σ 229 0xE5
µ 230 0xE6
τ 231 0xE7
Φ 232 0xE8
Θ 233 0xE9
Ω 234 0xEA
δ 235 0xEB
∞ 236 0xEC
φ 237 0xED
ε 238 0xEE
∩ 239 0xEF
≡ 240 0xF0
± 241 0xF1
≥ 242 0xF2
≤ 243 0xF3
⌠ 244 0xF4
⌡ 245 0xF5
÷ 246 0xF6
≈ 247 0xF7
° 248 0xF8
∙ 249 0xF9
· 250 0xFA
√ 251 0xFB
ⁿ 252 0xFC
² 253 0xFD
■ 254 0xFE"

test -z $1 && echo -e "Usage: $0 filename\nThe file should be the file containing ANSI characters that you wish to convert" && exit 1 # Give usage if no arguments are present

setupTable # Sets up the table that is needed later
echo 'LED SETUP
ATTACKMODE HID
LED ATTACK
QUACK GUI r
QUACK DELAY 500
QUACK STRING "cmd /K copy con ansi.txt&exit"
QUACK ENTER
QUACK DELAY 1000' # This adds the setup commands at the start of the script

cat $1 | while read -n 1 char; do # This will cat out the file and read it one line at a time
	echo -n "QUACK ALTCODE " # This setups up the ALTCODE command
	echo "$TABLE" | grep "$char" | awk {'print $2'} # This finds the correct altcode as long as it is not 0 or 255
done | grep ALTCODE | sed "s/ALTCODE 1$/ENTER/" # This makes sure it only outputs the altcodes, and replaces altcode 1 with an ENTER command
echo "LED FINISH" # Let the user know the payload is done
